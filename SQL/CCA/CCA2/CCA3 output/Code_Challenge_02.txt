MANOJ K
180665

CCA02



--1.Write a query to display your birthday( day of week)
select datepart(weekday, '1997-03-25') - 1 as daynumber,
       datename(weekday, '1997-03-25') as dayofweek;



--2.Write a query to display your age in days
select datediff(day,'1997-03-25',getdate()) as 'AgeInDays'



-3.Write a query to display all employees information those who joined before 5 years in the current month

select * from emp;
update emp set hiredate = '2025-03-11' where deptno = 20;
update emp set hiredate = '2019-07-25' where deptno = 10;

select *
from emp
where datediff(year, hiredate, current_timestamp) >= 5
  and month(hiredate) = month(current_timestamp);




--4.	Create table Employee with empno, ename, sal, doj columns or use and perform the following operations in a single transaction
--	a. First insert 3 rows 
--	b. Update the second row sal with 15% increment  
--        c. Delete first row.
--After completing above all actions, recall the deleted row without losing increment of second row.

begin tran

create table employeetransaction (
    empno int,
    ename varchar(30),
    sal int,
    doj datetime
);

insert into employeetransaction values
    (1, 'varun', 800, '2022-03-11'),
    (2, 'tarun', 800, '2022-08-11'),
    (3, 'siran', 800, '2022-12-19');

update employeetransaction
set sal = sal + (sal * 0.15)
where empno = 2;

save tran beforedelete;

delete from employeetransaction
where empno = 1;

rollback tran beforedelete;

select * from employeetransaction;



--5.      Create a user defined function calculate Bonus for all employees of a  given dept using 	following conditions
--	a.     For Deptno 10 employees 15% of sal as bonus.
--	b.     For Deptno 20 employees  20% of sal as bonus
--	c      For Others employees 5%of sal as bonus


-- Drop function if it already exists (SQL Server style)
if object_id('dbo.calcbonus', 'fn') is not null
    drop function dbo.calcbonus;
go

create function dbo.calcbonus (
    @salary float,
    @deptno int
)
returns float
as
begin
    declare @bonusamount float;

    if (@deptno = 10)
        set @bonusamount = @salary * 0.15;
    else if (@deptno = 20)
        set @bonusamount = @salary * 0.20;
    else
        set @bonusamount = @salary * 0.05;

    return @bonusamount;
end;
go

select * from emp;

select
    empno,
    ename,
    salary,
    deptno,
    dbo.calcbonus(salary, deptno) as [bonus amount for that department]
from emp;



--6. Create a procedure to update the salary of employee by 500 whose dept name is Sales and current salary is below 1500 (use emp table)

if object_id('dbo.sp_update_salary', 'p') is not null
    drop procedure dbo.sp_update_salary;
go

create procedure sp_update_salary
as
begin
    update e
    set e.salary = e.salary + 500
    from emp e
    join dept d on e.deptno = d.deptno
    where d.dname = 'sales' and e.salary < 1500;
end;
go

exec sp_update_salary;

select * from emp;







